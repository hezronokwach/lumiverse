{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/hezron/lumiverse/src/components/authentication/LoginForm.tsx"],"sourcesContent":["\"use client\"\nimport React from 'react'\nimport { z } from \"zod\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { useForm } from \"react-hook-form\"\n\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\n\nconst formSchema = z.object({\n    email: z.string().email({\n        message: \"Invalid email address\",\n    }),\n    password: z.string().min(8, {\n        message: \"Password must be at least 8 characters\"\n    }),\n})\nexport const LoginForm = () => {\n    const form = useForm<z.infer<typeof formSchema>>({\n        resolver: zodResolver(formSchema),\n        defaultValues: {\n          email: \"\",\n            password: \"\",\n        },\n      })\n\n      function onSubmit(values: z.infer<typeof formSchema>) {\n        // Do something with the form values.\n        // âœ… This will be type-safe and validated.\n        console.log(values)\n      }\n\n    return (\n        <div>\n             <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n        <FormField\n          control={form.control}\n          name=\"username\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Username</FormLabel>\n              <FormControl>\n                <Input placeholder=\"shadcn\" {...field} />\n              </FormControl>\n              <FormDescription>\n                This is your public display name.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n        </div>\n    )\n}\n"],"names":[],"mappings":";;;;AAGA;AAGA;AACA;AASA;AAdA;AAEA;AAJA;;;;;;;;AAkBA,MAAM,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxB,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,SAAS;IACb;IACA,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QACxB,SAAS;IACb;AACJ;AACO,MAAM,YAAY;IACrB,MAAM,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAA8B;QAC7C,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,OAAO;YACL,UAAU;QACd;IACF;IAEA,SAAS,SAAS,MAAkC;QAClD,qCAAqC;QACrC,0CAA0C;QAC1C,QAAQ,GAAG,CAAC;IACd;IAEF,qBACI,8OAAC;kBACI,cAAA,8OAAC,gIAAA,CAAA,OAAI;YAAE,GAAG,IAAI;sBACrB,cAAA,8OAAC;gBAAK,UAAU,KAAK,YAAY,CAAC;gBAAW,WAAU;;kCACrD,8OAAC,gIAAA,CAAA,YAAS;wBACR,SAAS,KAAK,OAAO;wBACrB,MAAK;wBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;kDACP,8OAAC,gIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,8OAAC,gIAAA,CAAA,cAAW;kDACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;4CAAC,aAAY;4CAAU,GAAG,KAAK;;;;;;;;;;;kDAEvC,8OAAC,gIAAA,CAAA,kBAAe;kDAAC;;;;;;kDAGjB,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;kCAIlB,8OAAC,kIAAA,CAAA,SAAM;wBAAC,MAAK;kCAAS;;;;;;;;;;;;;;;;;;;;;;AAK9B"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///home/hezron/lumiverse/src/components/authentication/authForm.tsx"],"sourcesContent":["'use client'\nimport React from 'react'\nimport { LoginForm } from './LoginForm'\n\nexport const AuthForm = () => {\n    const [mode, setEmail] = React.useState('login')\n    return (\n        <div className='space-y-6'>\n            <div className='flex flex-col space-y-2 text-center'>\n                <h1 className='text-2xl font-semibold tracking-tight'>\n                    {\n                        mode === \"reset\" ? \"Reset Password\" : mode === \"login\" ? \"Login\" : \"Sign Up\"\n                    }\n\n                </h1>\n                <p className='text-sm text-muted-foreground'>\n                    {\n                        mode === \"reset\" ? \"Enter your email to reset password\" : mode === \"login\" ? \"Enter your email to login\" : \"Enter your details to create account\"\n                    }\n\n                </p>\n\n\n            </div>\n            {\n                mode === \"login\" && <LoginForm />\n            }\n            {\n                mode === \"reset\" && <span>Reset Form</span>\n            }\n            {\n                mode === \"signup\" && <span>Signup Form</span>\n            }\n\n\n\n        </div>\n\n    )\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIO,MAAM,WAAW;IACpB,MAAM,CAAC,MAAM,SAAS,GAAG,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;IACxC,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAG,WAAU;kCAEN,SAAS,UAAU,mBAAmB,SAAS,UAAU,UAAU;;;;;;kCAI3E,8OAAC;wBAAE,WAAU;kCAEL,SAAS,UAAU,uCAAuC,SAAS,UAAU,8BAA8B;;;;;;;;;;;;YAQnH,SAAS,yBAAW,8OAAC,iJAAA,CAAA,YAAS;;;;;YAG9B,SAAS,yBAAW,8OAAC;0BAAK;;;;;;YAG1B,SAAS,0BAAY,8OAAC;0BAAK;;;;;;;;;;;;AAQ3C"}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}