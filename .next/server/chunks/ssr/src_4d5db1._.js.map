{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/hezron/lumiverse/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/hezron/lumiverse/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///home/hezron/lumiverse/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,sMAAM,UAAU,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,kKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file:///home/hezron/lumiverse/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message) : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":["file:///home/hezron/lumiverse/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///home/hezron/lumiverse/src/components/authentication/LoginForm.tsx"],"sourcesContent":["\"use client\"\nimport React from 'react'\nimport { z } from \"zod\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { useForm } from \"react-hook-form\"\n\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport { cn } from '@/lib/utils'\n\nconst formSchema = z.object({\n    email: z.string().email({\n        message: \"Invalid email address\",\n    }),\n    password: z.string().min(8, {\n        message: \"Password must be at least 8 characters\"\n    }),\n})\nexport const LoginForm = ({className}:{className?:string}) => {\n    const form = useForm<z.infer<typeof formSchema>>({\n        resolver: zodResolver(formSchema),\n        defaultValues: {\n          email: \"\",\n            password: \"\",\n        },\n      })\n\n      function onSubmit(values: z.infer<typeof formSchema>) {\n        // Do something with the form values.\n        // ✅ This will be type-safe and validated.\n        console.log(values)\n      }\n\n    return (\n        <div className = {cn(\"grid gap-6\", className)}>\n         <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Email</FormLabel>\n              <FormControl>\n                <Input placeholder=\"name@example.com\" {...field} />\n              </FormControl>             \n              <FormMessage />\n            </FormItem>\n          )}\n        />\n          <FormField\n          control={form.control}\n          name=\"password\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Password</FormLabel>\n              <FormControl>\n                <Input type = \"password\" placeholder=\"Enter password\" {...field} />\n              </FormControl>             \n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\" className='w-full'>Login</Button>\n      </form>\n    </Form>\n        </div>\n    )\n}\n"],"names":[],"mappings":";;;;AAGA;AAGA;AACA;AASA;AACA;AAfA;AAEA;AAJA;;;;;;;;;AAmBA,MAAM,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxB,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,SAAS;IACb;IACA,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QACxB,SAAS;IACb;AACJ;AACO,MAAM,YAAY,CAAC,EAAC,SAAS,EAAqB;IACrD,MAAM,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAA8B;QAC7C,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,OAAO;YACL,UAAU;QACd;IACF;IAEA,SAAS,SAAS,MAAkC;QAClD,qCAAqC;QACrC,0CAA0C;QAC1C,QAAQ,GAAG,CAAC;IACd;IAEF,qBACI,8OAAC;QAAI,WAAa,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;kBAClC,cAAA,8OAAC,gIAAA,CAAA,OAAI;YAAE,GAAG,IAAI;sBACjB,cAAA,8OAAC;gBAAK,UAAU,KAAK,YAAY,CAAC;gBAAW,WAAU;;kCACrD,8OAAC,gIAAA,CAAA,YAAS;wBACR,SAAS,KAAK,OAAO;wBACrB,MAAK;wBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;kDACP,8OAAC,gIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,8OAAC,gIAAA,CAAA,cAAW;kDACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;4CAAC,aAAY;4CAAoB,GAAG,KAAK;;;;;;;;;;;kDAEjD,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;kCAIhB,8OAAC,gIAAA,CAAA,YAAS;wBACV,SAAS,KAAK,OAAO;wBACrB,MAAK;wBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;kDACP,8OAAC,gIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,8OAAC,gIAAA,CAAA,cAAW;kDACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;4CAAC,MAAO;4CAAW,aAAY;4CAAkB,GAAG,KAAK;;;;;;;;;;;kDAEjE,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;kCAIlB,8OAAC,kIAAA,CAAA,SAAM;wBAAC,MAAK;wBAAS,WAAU;kCAAS;;;;;;;;;;;;;;;;;;;;;;AAKjD"}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 463, "column": 0}, "map": {"version":3,"sources":["file:///home/hezron/lumiverse/src/components/authentication/Signup.tsx"],"sourcesContent":["\"use client\"\nimport React, { use, useId, useState } from 'react'\nimport { set, z } from \"zod\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { useForm } from \"react-hook-form\"\n\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport { cn } from '@/lib/utils'\nimport { Loader2 } from 'lucide-react'\nimport { toast } from \"sonner\"\nimport { signup } from '@/app/actions/authActions'\n\n const passwordValidationRegex = new RegExp(\n  \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\" );\n\nconst formSchema = z.object({\n  full_name : z.string().min(3, {\n    message: \"Full name must be at least 3 characters\"\n  }),\n    email: z.string().email({\n        message: \"Invalid email address\",\n    }),\n    password: z.string({\n      required_error: \"Password is required\",\n    }).min(8, {\n      message: \"Password must be at least 8 characters\",\n    }).regex(passwordValidationRegex, {\n      message: \"Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character\",\n      \n    }),\n    confirmPassword: z.string({\n      required_error: \"Password is required\",\n    })\n    }).refine(data => data.password === data.confirmPassword, {\n      message: \"Passwords do not match\",\n      path: [\"confirmPassword\"],\n    });\n\nexport const SignupForm = ({className}:{className?:string}) => {\n  const[loading, setLoading] = useState(false)\n  const toastid = useId();\n\n    const form = useForm<z.infer<typeof formSchema>>({\n        resolver: zodResolver(formSchema),\n        defaultValues: {\n          email: \"\",\n          password: \"\",\n          full_name: \"\",\n          confirmPassword: \"\",\n        },\n      })\n\n      async function onSubmit(values: z.infer<typeof formSchema>) {\n        toast.loading(\"Signin up...\", {id: toastid})\n        setLoading(true) \n        \n        const formData = new FormData()\n        formData.append(\"email\", values.email)\n        formData.append(\"password\", values.password)\n        formData.append(\"full_name\", values.full_name)\n\n        const{error, success} = await signup(formData)\n        console.log(values)\n      }\n\n    return (\n        <div className = {cn(\"grid gap-6\", className)}>\n         <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n      <FormField\n          control={form.control}\n          name=\"full_name\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Full name</FormLabel>\n              <FormControl>\n                <Input placeholder=\"Your full name\" {...field} />\n              </FormControl>             \n              <FormMessage />\n            </FormItem>\n          )}\n        />\n       \n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Email</FormLabel>\n              <FormControl>\n                <Input placeholder=\"name@example.com\" {...field} />\n              </FormControl>             \n              <FormMessage />\n            </FormItem>\n          )}\n        />\n          <FormField\n          control={form.control}\n          name=\"password\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Password</FormLabel>\n              <FormControl>\n                <Input type = \"password\" placeholder=\"Enter password\" {...field} />\n              </FormControl>             \n              <FormMessage />\n            </FormItem>\n          )}\n        />\n           <FormField\n          control={form.control}\n          name=\"confirmPassword\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Confirm Password</FormLabel>\n              <FormControl>\n                <Input type = \"password\" placeholder=\"Confirm password\" {...field} />\n              </FormControl>             \n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\" className='w-full' disabled = {loading}>\n          {loading && <Loader2 className='mr-2 h-4 w-4 animate-spin'/>}\n          Signup</Button>\n      </form>\n    </Form>\n        </div>\n    )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 753, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 759, "column": 0}, "map": {"version":3,"sources":["file:///home/hezron/lumiverse/src/components/authentication/ResetPassword.tsx"],"sourcesContent":["\"use client\"\nimport React from 'react'\nimport { z } from \"zod\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { useForm } from \"react-hook-form\"\n\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport { cn } from '@/lib/utils'\n\nconst formSchema = z.object({\n    email: z.string().email({\n        message: \"Invalid email address\",\n    }),\n   \n})\nexport const ResetPassword = ({className}:{className?:string}) => {\n    const form = useForm<z.infer<typeof formSchema>>({\n        resolver: zodResolver(formSchema),\n        defaultValues: {\n          email: \"\",\n        }\n      })\n\n      function onSubmit(values: z.infer<typeof formSchema>) {\n        // Do something with the form values.\n        // ✅ This will be type-safe and validated.\n        console.log(values)\n      }\n\n    return (\n        <div className = {cn(\"grid gap-6\", className)}>\n         <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Email</FormLabel>\n              <FormControl>\n                <Input placeholder=\"name@example.com\" {...field} />\n              </FormControl>             \n              <FormMessage />\n            </FormItem>\n          )}\n        />\n     \n        <Button type=\"submit\" className='w-full'> Reset Password</Button>\n      </form>\n    </Form>\n        </div>\n    )\n}\n"],"names":[],"mappings":";;;;AAGA;AAGA;AACA;AASA;AACA;AAfA;AAEA;AAJA;;;;;;;;;AAmBA,MAAM,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxB,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,SAAS;IACb;AAEJ;AACO,MAAM,gBAAgB,CAAC,EAAC,SAAS,EAAqB;IACzD,MAAM,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAA8B;QAC7C,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,OAAO;QACT;IACF;IAEA,SAAS,SAAS,MAAkC;QAClD,qCAAqC;QACrC,0CAA0C;QAC1C,QAAQ,GAAG,CAAC;IACd;IAEF,qBACI,8OAAC;QAAI,WAAa,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;kBAClC,cAAA,8OAAC,gIAAA,CAAA,OAAI;YAAE,GAAG,IAAI;sBACjB,cAAA,8OAAC;gBAAK,UAAU,KAAK,YAAY,CAAC;gBAAW,WAAU;;kCACrD,8OAAC,gIAAA,CAAA,YAAS;wBACR,SAAS,KAAK,OAAO;wBACrB,MAAK;wBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;kDACP,8OAAC,gIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,8OAAC,gIAAA,CAAA,cAAW;kDACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;4CAAC,aAAY;4CAAoB,GAAG,KAAK;;;;;;;;;;;kDAEjD,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;kCAKlB,8OAAC,kIAAA,CAAA,SAAM;wBAAC,MAAK;wBAAS,WAAU;kCAAS;;;;;;;;;;;;;;;;;;;;;;AAKjD"}},
    {"offset": {"line": 872, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 878, "column": 0}, "map": {"version":3,"sources":["file:///home/hezron/lumiverse/src/components/authentication/authForm.tsx"],"sourcesContent":["'use client'\nimport React from 'react'\nimport { LoginForm } from './LoginForm'\nimport { Button } from '../ui/button'\nimport { SignupForm } from './Signup'\nimport { ResetPassword } from './ResetPassword'\n\nexport const AuthForm = () => {\n    const [mode, setMode] = React.useState('login')\n    return (\n        <div className='space-y-6'>\n            <div className='flex flex-col space-y-2 text-center'>\n                <h1 className='text-2xl font-semibold tracking-tight'>\n                    {\n                        mode === \"reset\" ? \"Reset Password\" : mode === \"login\" ? \"Login\" : \"Sign Up\"\n                    }\n\n                </h1>\n                <p className='text-sm text-muted-foreground'>\n                    {\n                        mode === \"reset\" ? \"Enter your email to reset password\" : mode === \"login\" ? \"Enter your email to login\" : \"Enter your details to create account\"\n                    }\n\n                </p>\n\n\n            </div>\n            {\n                mode === \"login\" && <>\n                <LoginForm />\n                <div className='text-center flex justify-between'>\n                    <Button variant ={'link'} className='p-0' onClick={() => setMode('signup')}>\n                        Need an account\n                    </Button>\n                    <Button variant ={'link'} className='p-0' onClick={() => setMode('reset')}>\n                        Forgot password?\n                    </Button>\n                </div>\n                </>\n                \n\n            }\n            {\n                mode === \"reset\" && <>\n                 <ResetPassword />\n                 <div className='text-center '>\n                    <Button variant ={'link'} className='p-0' onClick={() => setMode('login')}>\n                        Back to Login\n                    </Button>\n                    \n                </div>\n\n                </>\n               \n            }\n            {\n                mode === \"signup\" && <>\n                <SignupForm />\n                <div className='text-center '>\n                    <Button variant ={'link'} className='p-0' onClick={() => setMode('login')}>\n                        Already have an account? Login\n                    </Button>\n                    \n                </div>\n                <p className=' px-8 text-center text-muted-foreground '>\n                    By signing up, you agree to our terms and conditions\n                </p>\n\n                </>\n            }\n        </div>\n\n    )\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;;AAOO,MAAM,WAAW;IACpB,MAAM,CAAC,MAAM,QAAQ,GAAG,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;IACvC,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAG,WAAU;kCAEN,SAAS,UAAU,mBAAmB,SAAS,UAAU,UAAU;;;;;;kCAI3E,8OAAC;wBAAE,WAAU;kCAEL,SAAS,UAAU,uCAAuC,SAAS,UAAU,8BAA8B;;;;;;;;;;;;YAQnH,SAAS,yBAAW;;kCACpB,8OAAC,iJAAA,CAAA,YAAS;;;;;kCACV,8OAAC;wBAAI,WAAU;;0CACX,8OAAC,kIAAA,CAAA,SAAM;gCAAC,SAAU;gCAAQ,WAAU;gCAAM,SAAS,IAAM,QAAQ;0CAAW;;;;;;0CAG5E,8OAAC,kIAAA,CAAA,SAAM;gCAAC,SAAU;gCAAQ,WAAU;gCAAM,SAAS,IAAM,QAAQ;0CAAU;;;;;;;;;;;;;;YAS/E,SAAS,yBAAW;;kCACnB,8OAAC,qJAAA,CAAA,gBAAa;;;;;kCACd,8OAAC;wBAAI,WAAU;kCACZ,cAAA,8OAAC,kIAAA,CAAA,SAAM;4BAAC,SAAU;4BAAQ,WAAU;4BAAM,SAAS,IAAM,QAAQ;sCAAU;;;;;;;;;;;;;YAU/E,SAAS,0BAAY;;kCACrB,8OAAC,8IAAA,CAAA,aAAU;;;;;kCACX,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC,kIAAA,CAAA,SAAM;4BAAC,SAAU;4BAAQ,WAAU;4BAAM,SAAS,IAAM,QAAQ;sCAAU;;;;;;;;;;;kCAK/E,8OAAC;wBAAE,WAAU;kCAA2C;;;;;;;;;;;;;;AASxE"}},
    {"offset": {"line": 1029, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}